{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvent.js","actions/events.js","actions/auth.js","components/auth/Charging.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRoute.js","components/reducers/authReducer.js","components/reducers/calendarReducer.js","components/reducers/uiReducer.js","components/reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","cleanActiveEvent","updatedEvent","eventLoaded","delatedEvent","checkingFinish","login","user","startLogout","dispatch","clear","logout","Charging","className","title","useForm","initialState","useState","formulary","setformulary","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rRepeatPassword","formRegisterValues","handleRegisterInputChange","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","placeholder","onChange","msg","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","playload","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","currentDate","minutes","seconds","add","endDate","clone","initEvent","note","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setStartDate","dateEnd","setEndtDate","isValid","setIsValid","formValues","setFormValues","useEffect","handleImputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","myEvent","_id","console","log","getState","id","user_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","color","backgroundColor","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRoute","checking","path","element","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6b39421.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n//los endpiont son /auth, /event, /ui, etc\r\n// method van a ser los GET, POST, PUT, etc.\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") =>{\r\n\r\n    const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/auth or event...\r\n\r\n    if (method===\"GET\"){\r\n        return fetch (url)\r\n    } else {\r\n        return fetch(url, {\r\n            //creo una petición HTTPS (method, header, body)\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") =>{\r\n\r\n    const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/auth or event...\r\n    const token = localStorage.getItem(\"token\") || \" \"; // recordar que en el accion auth cuando hice el post del login o register, guarde esa info en el local storage.\r\n    \r\n    if (method===\"GET\"){\r\n        return fetch (url, {\r\n            method,\r\n            headers:{ // este header mirar el postman, es donde pongo key: x-token y en valu el token.\r\n                \"x-token\" : token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            //creo una petición HTTPS (method, header, body)\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"x-token\" : token\r\n            },\r\n            body: JSON.stringify ( data )\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n   \r\n    uiOpenModal : \"[ui] Open Modal\",\r\n    uiCloseModal : \"[ui] Close Modal\",\r\n\r\n    eventSetActive: \"[event] Set Active\",\r\n    eventAddNew: \"[event] Add New\",\r\n    cleanActiveEvent : \"[event] Clean active Event\",\r\n    \r\n    updatedEvent : \"[event] Update Event\",\r\n    delatedEvent : \"[event] Delate Event\",\r\n\r\n    //auth\r\n\r\n    authCheking: \"[auth] Checking login state\",\r\n    authChekingFinish: \"[auth] Finish Checking login state\",\r\n    authStartLogin: \"[auth] Start Login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start Register\",\r\n    authStartTokenRevew: \"[auth] Start Token Revew\",\r\n    authLogout: \"[auth] Logout\",\r\n\r\n    //save in the DB\r\n\r\n    eventStartAddNew :  \"[event] Start add New\",\r\n\r\n    // Get information from DB\r\n\r\n    eventLoaded :  \"[event] Event Loaded\",\r\n\r\n    eventLogout: \"[event] Event logout\"\r\n\r\n\r\n} ","import moment from \"moment\"\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) =>{\r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end:moment(e.end ).toDate(),\r\n            start: moment(e.start ).toDate(),\r\n        })\r\n    );\r\n}","\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvent\";\r\n\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\n\r\nexport const eventStartAddNew= (event) =>{\r\n    \r\n    \r\n    /* my evento tiene la siguiente forma \r\n    {\r\n           end: ....... , \r\n           staart : ...... ,\r\n           title : \" .....\",\r\n           notes: \" .......\"\r\n        }*/\r\n        \r\n       //getSatate es para buscar info del estado del Redux. es parecido al useSelector.\r\n        return async (dispatch, getState) =>{\r\n            \r\n            const {name, uid} = getState().auth;\r\n\r\n            try {\r\n                const resp = await fetchConToken (\"events\", event, \"POST\" );\r\n                //este body es lo que devuelve la req. \r\n                const body = await resp.json();\r\n                \r\n                \r\n\r\n                if(body.ok){\r\n\r\n                    //como obervo arriba este evento no tiene ni el id, ni el nombre. Por lo cual se lo grego de esta forma\r\n                    // y esta información la saco de la base de datos.\r\n                    event.id = body.event._id;\r\n                    event.user = {\r\n                        user_id : uid,\r\n                        name: name\r\n                    }\r\n\r\n                    \r\n                    dispatch(eventAddNew (event)); \r\n                    \r\n                }\r\n\r\n                \r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            \r\n        }      \r\n        \r\n    }\r\n    \r\n    const eventAddNew = (event)=>{\r\n        return{\r\n            type:types.eventAddNew,\r\n            payload : event\r\n        }\r\n    }\r\n    \r\n    // aqui donde dice event, es el evento que viende del formulario. \r\n    \r\n    export const eventSetActive = (event)=>{\r\n        return{\r\n            type:types.eventSetActive,\r\n            payload : event\r\n        }\r\n    }\r\n\r\n\r\nexport const cleanActiveEvent = () =>{\r\n    return{\r\n        type: types.cleanActiveEvent,\r\n        //payload: null\r\n    }\r\n}\r\n\r\nexport const eventSatrtUpdatedEvent = (event) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n       \r\n        const myEvent = event._id\r\n        console.log(myEvent);\r\n        \r\n        try {\r\n            const resp = await fetchConToken (`events/${myEvent}`, event, \"PUT\");\r\n            const body = await resp.json();\r\n\r\n                if (body.ok){\r\n          \r\n                    dispatch (updatedEvent (event));\r\n\r\n                }else{\r\n                    Swal.fire(\"Error\", body.msg , \"error\" ) ;\r\n                }\r\n            \r\n        } catch (error) {\r\n            \r\n        console.log(error);\r\n\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst updatedEvent = (event) => ({\r\n    \r\n        type: types.updatedEvent,\r\n        payload: event\r\n    \r\n});\r\n\r\n\r\n\r\n\r\nexport const eventStartLoging = () =>{\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            //para esta petición get no debo paras ninguna info, si no lo veo claro mirar PostMan\r\n            const resp = await fetchConToken ( \"events\" );\r\n            const body = await resp.json();\r\n            console.log(body.events);\r\n\r\n            const events = prepareEvents (body.events);\r\n          \r\n            \r\n            dispatch(eventLoaded(events));\r\n            \r\n            console.log(events);\r\n   \r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n            \r\n        }\r\n   \r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n   \r\n    type:types.eventLoaded,\r\n        payload:events \r\n})\r\n\r\n\r\n\r\nexport const eventDeleted = () => {\r\n    return async (dispatch, getState) =>{\r\n\r\n        const {_id}  = getState().calendar.activeEvent;\r\n\r\n        console.log(_id);\r\n        \r\n        try {\r\n            const resp = await fetchConToken (`events/${_id}`, {}, \"DELETE\");\r\n            const body = await resp.json();\r\n\r\n                if (body.ok){\r\n          \r\n                    dispatch ( delatedEvent ());\r\n\r\n                }else{\r\n                    Swal.fire(\"Error\", body.msg , \"error\" ) ;\r\n                }\r\n            \r\n        } catch (error) {\r\n            \r\n        console.log(error);\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst delatedEvent = () =>{\r\n    return {\r\n       type: types.delatedEvent,\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const eventLogout = () =>({\r\n    \r\n    type: types.eventLogout,\r\n    \r\n   \r\n\r\n})","\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n/* este es el body (res:)\r\nname: \"Lorenzo\"\r\nok: true\r\ntoken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2MTk0MzNjNjZhN2E3MjE4YzQ2M2YwOWMiLCJuYW1lIjoiTG9yZW56byIsImlhdCI6MTYzNzQxMjYyNiwiZXhwIjoxNjM3NDE5ODI2fQ.Q_PbnLRmBp9dCOWqbo5c5onwhb3N4ppgB_cF3wWbnNA\"\r\nuid: \"619433c66a7a7218c463f09c\"\r\n*/\r\n\r\n\r\nexport const startLogin= (email, password) =>{\r\n    //esta acción se ejecuta en LoginScreen\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken (\"auth\", {email, password}, \"POST\" );\r\n        const body = await resp.json(); // capta las res del back., es el body que veo arriba\r\n\r\n    \r\n        if (body.ok){\r\n            localStorage.setItem(\"token\", body.token)\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n\r\n            dispatch(login({\r\n                name: body.name,\r\n                uid: body.uid\r\n            }))\r\n        \r\n        }else{\r\n                Swal.fire(\"Error\", `Check your email and the Password must include one lowercase character, one uppercase character, a number, and a special character.`, \"error\");\r\n        }    \r\n    }        \r\n} \r\n\r\n\r\n\r\n/*res:\r\n   \"ok\": true,\r\n    \"msg\": \"61995cee65c86c49b5f172e6\",\r\n    \"name\": \"Lorenzo\",\r\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e.....\"\r\n */  \r\n\r\nexport const startRegister = (email, password, name ) =>{\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken (\"auth/new\", {email, password, name}, \"POST\" );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok){\r\n            localStorage.setItem(\"token\", body.token)\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n\r\n            dispatch(login({\r\n                name: body.name,\r\n                uid: body.uid\r\n            }))\r\n        }else{\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }  \r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = ()=> {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken (\"auth/renew\", \"POST\" );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok){\r\n            localStorage.setItem(\"token\", body.token)\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n\r\n            dispatch(login({\r\n                name: body.name,\r\n                uid: body.uid\r\n            }))\r\n        }else{\r\n            \r\n            dispatch(checkingFinish());\r\n        }  \r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>({\r\n    type: types.authChekingFinish\r\n})\r\n\r\n\r\n\r\n\r\n//creo una accion syncrona. Esta accion me sirve para cambiar el usuario en mi codigo,\r\n// es la que realmente cambia mi estado inidial., la que defino arriba llamada startLogin\r\n//es creada para agarrar la informacion del usuario existente y ejecutar el req y el res.\r\n\r\nconst login = (user)=> ({\r\n    \r\n    type: types.authLogin,\r\n    payload:user,\r\n    \r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst logout = () =>({\r\n    type:types.authLogout,\r\n    \r\n})\r\n\r\n\r\n","\r\n\r\n\r\nexport const Charging = () => {\r\n   \r\n    return (\r\n       \r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Quote\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <blockquote className=\"blockquote mb-0\">\r\n                <p>A well-known quote, contained in a blockquote element.</p>\r\n                <footer className=\"blockquote-footer\">Someone famous in <cite title=\"Source Title\">Source Title</cite></footer>\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [formulary, setformulary] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setformulary(initialState);\r\n    }\r\n    \r\n    const handleInputChange = ({target})=>{\r\n        setformulary({\r\n            ...formulary,\r\n            [target.name] : target.value\r\n        });\r\n    };\r\n    \r\n    return [formulary , handleInputChange, reset]\r\n}","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './loginScreen.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const [formLoginValues , handleLoginInputChange] = useForm({\r\n        lEmail: \"vignolo_3@hotmail.com\",\r\n        lPassword : \"Elmejormate123#\",\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues , handleRegisterInputChange] = useForm({\r\n        rName: \"Lorenzo Vignolo\",\r\n        rEmail: \"vignolo_3@hotmail.com\",\r\n        rPassword : \"Elmejormate123#\",\r\n        rRepeatPassword: \"Elmejormate123#\"\r\n\r\n    });\r\n\r\n    const {rName, rEmail, rPassword, rRepeatPassword} = formRegisterValues;\r\n\r\n   \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n\r\n        /*console.log(formLoginValues);\r\n        ESTE LOG DEVUELVE => {lEmail: 'vignolo_3@hotmail.com', lPassword: '123456'}\r\n        Eso mismo es lo que necesita el back para hacer el login.*/\r\n    }\r\n\r\n\r\n    const handleRegister = (e)=> {\r\n        e.preventDefault();\r\n        if(rPassword !== rRepeatPassword){\r\n            return Swal.fire(\"Error\", \"Your Passwords must be the same.\", \"error\")\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword, rName))\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = {handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = \"lEmail\"\r\n                                value = {lEmail}\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name = \"lPassword\"\r\n                                value = {lPassword}\r\n                                onChange = {handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit= {handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = \"rName\"\r\n                                value = {rName}\r\n                                onChange = {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = \"rEmail\"\r\n                                value = {rEmail}\r\n                                onChange = {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name = \"rPassword\"\r\n                                value = {rPassword}\r\n                                onChange = {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name = \"rRepeatPassword\"\r\n                                value = {rRepeatPassword}\r\n                                onChange = {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { eventLogout, startLogout } from '../../actions/auth'\r\nimport './navBar.css'\r\n\r\nexport const NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const handleLogout = ()=>{\r\n        \r\n        dispatch (startLogout())\r\n    }\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n    return (\r\n        <div className =\"navbar navbar-dark bg-dark mb-4\">\r\n       \r\n        \r\n        <span className = \"navbar-brand name\">\r\n            {name}\r\n        </span>\r\n        <button \r\n        onClick = {handleLogout}\r\n        className=\" btn btn-outline-danger button\">\r\n        <i className = \"fas fa-sign-out-alt\"></i>\r\n            <span> Salir</span>\r\n        </button>\r\n            \r\n        </div>\r\n       \r\n    )\r\n}\r\n","\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            \r\n            <span>{title} </span>\r\n            <strong>{ user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = ()=>{\r\n    return{\r\n        type:types.uiOpenModal,\r\n        playload:true\r\n    }\r\n}\r\nexport const uiCloseModal = ()=>{\r\n    return{\r\n        type:types.uiCloseModal,\r\n        playload:false\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { cleanActiveEvent,  eventSatrtUpdatedEvent,  eventStartAddNew} from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  Modal.setAppElement('#root');\r\n\r\nconst currentDate = moment().minutes(0).seconds(0).add(1,\"hours\");\r\nconst endDate = currentDate.clone().add(1, \"hours\");\r\n\r\nconst initEvent = {\r\n    title: \"\",\r\n    note: \"\",\r\n    start : currentDate.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\n  \r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setStartDate] = useState(currentDate.toDate());\r\n    const [dateEnd, setEndtDate] = useState(endDate.toDate());\r\n    const [isValid, setIsValid] =  useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, note, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n       if(activeEvent){\r\n           setFormValues(activeEvent);\r\n       }else{\r\n           setFormValues (initEvent)\r\n       }\r\n        \r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n    const handleImputChange = ({target})=>{\r\n        setFormValues ({\r\n            ...formValues,\r\n            [target.name] : target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    /////////////////////////////\r\n    /* ejecuta accion a travez de dispach pasando el modalOpen a false */\r\n    \r\n    const closeModal = ()=>{\r\n        //console.log(e);\r\n        dispatch(uiCloseModal());\r\n        dispatch(cleanActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n     /////////////////////////////\r\n\r\n\r\n\r\n    const handleStartDateChange = (e)=>{\r\n        setStartDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start : e // e: aqui es una fech\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleEndtDateChange = (e)=> {\r\n        setEndtDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e // e: aqui es una fecha\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e)=>{\r\n        e.preventDefault();\r\n        \r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return  Swal.fire(\"Error\", \"End Date must be bigger than Start Date\", \"error\"); \r\n        }\r\n\r\n        if (title.trim().length < 2){\r\n            return setIsValid(false);\r\n        }\r\n\r\n      \r\n        if ( activeEvent ) {\r\n            dispatch( eventSatrtUpdatedEvent( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n\r\n        \r\n\r\n        setIsValid(true);\r\n        closeModal();\r\n    \r\n    }\r\n\r\n   \r\n\r\n\r\n    return (\r\n        \r\n\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS = {200}\r\n        className = \"modal\"\r\n        overlayClassName = \"modal-fondo\"\r\n        \r\n      >\r\n        <h1> {(activeEvent ? \"Modify Event\" : \"New Event\" )} </h1>\r\n        <hr />\r\n        <form\r\n         className=\"container\"\r\n         onSubmit = {handleSubmitForm}\r\n         >\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className = \"form-control\"\r\n                    />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                \r\n                <DateTimePicker\r\n                        onChange={handleEndtDateChange}\r\n                        value={dateEnd}\r\n                        minDate= {dateStart}\r\n                        className = \"form-control\"\r\n                    />\r\n\r\n                \r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className= {`form-control ${!isValid && \"is-invalid\"}`}\r\n                    placeholder=\"title\"\r\n                    name=\"title\"\r\n                    value = {title}\r\n                    onChange = {handleImputChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder= \"notes\"\r\n                    rows=\"5\"\r\n                    name=\"note\"\r\n                    value = {note}\r\n                    onChange = {handleImputChange}\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n                </Modal>\r\n\r\n               \r\n            )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const handleButton = ()=>{\r\n    dispatch(uiOpenModal())\r\n   }\r\n\r\n\r\n    return (\r\n        <button\r\n        className = \"btn btn-primary fab\"\r\n        onClick = {handleButton }\r\n        >\r\n            <i className= \"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n    ","import { useDispatch } from \"react-redux\";\r\nimport {  eventDeleted } from \"../../actions/events\";\r\nimport React from 'react';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n \r\n    const handleButton = ()=>{\r\n     dispatch(eventDeleted())\r\n    }\r\n \r\n     return (\r\n         <button\r\n         className = \"btn btn-danger fab-danger\"\r\n         onClick = {handleButton }\r\n         >\r\n             <i className= \"fas fa-trash\"></i>\r\n             <span> Delate Event</span>\r\n         </button>\r\n     )\r\n }\r\n     ","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\n\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { cleanActiveEvent, eventSetActive, eventStartLoging } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\n\r\n// const myEventsList = [{\r\n//     title: \"cumpleaños\",\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,\"hours\").toDate(),\r\n//     bgcolor: \"#fafafa\",\r\n//     notas:\"Comprar regalo\",\r\n//     user: {\r\n//         _id: \"123\",\r\n//         name: \"Lorenzo\"\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\")|| \"month\");\r\n\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch (eventStartLoging());\r\n    }, [dispatch])\r\n       \r\n\r\n   \r\n\r\n    //////////////////////////////\r\n     /* ejecuta accion a travez de dispach pasando el modalOpen a true */\r\n\r\n    const onDoubleClick = (e)=>{\r\n        //console.log(e); me devuelve un objeto con la info de my EventList\r\n        dispatch(uiOpenModal());\r\n\r\n         };\r\n\r\n    ///////////////////////////////  \r\n\r\n\r\n    /* ejecuta accion a travez de dispach para seleccionar un evento*/\r\n        \r\n    const onSelectEvent= (e)=>{\r\n\r\n    dispatch(eventSetActive(e))\r\n    \r\n    };\r\n    \r\n    /////////////////////////////\r\n\r\n    const onViewChange= (e)=>{\r\n        setLastView(e);\r\n    \r\n        localStorage.setItem(\"lastView\", e)\r\n    };\r\n\r\n    const onSelectSlot = (e) =>{\r\n        dispatch(cleanActiveEvent())\r\n    }\r\n    \r\n    \r\n\r\n    const eventStyleGetter = (event, start,end,isSelected)=>{\r\n\r\n       \r\n        // uid esta arriba\r\n        \r\n            const style ={\r\n                color: \"white\",\r\n                backgroundColor:( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n                opacity: 0.8,\r\n                display: \"block\"\r\n            }\r\n            return{\r\n                style\r\n            } \r\n\r\n       \r\n    \r\n        };\r\n\r\n     \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages = {messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent = {onSelectEvent}\r\n                onView = {onViewChange}\r\n                onSelectSlot = {onSelectSlot}\r\n                selectable = {true}\r\n                view = {lastView}\r\n                components = {{\r\n                    \r\n                    event : CalendarEvent /*ese evento devuelve un argumento, ese argumento pasa al componente hijo que le pongo \"Calendar event\", por su parte el argumentoque pasa es la info del evento, o sea info de myEventList */\r\n                }}\r\n            />\r\n            <AddNewFab />\r\n\r\n           \r\n            {activeEvent && <DeleteEventFab />}\r\n                \r\n           \r\n            \r\n\r\n            <CalendarModal /> \r\n\r\n         \r\n        </div>\r\n    )\r\n}\r\n ","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst PrivateRoute = ({children}) => {\r\n    \r\nconst {uid} = useSelector(state => state.auth)\r\n    return (\r\n        !!uid\r\n        ?   children  \r\n        :  <Navigate to=\"/login\" />\r\n    )              \r\n}\r\n\r\n\r\nexport default PrivateRoute;","\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({children}) => {\r\n    const {uid} = useSelector(state => state.auth)\r\n  \r\n    return ( !!uid\r\n        ? <Navigate to=\"/\" />\r\n        : children \r\n        \r\n        )\r\n        \r\n}\r\n\r\nexport default PublicRoute;\r\n\r\n// import React from 'react';\r\n\r\n// import { Route} from 'react-router-dom';\r\n\r\n\r\n// const PublicRoute = ({\r\n//     isAuthenticated,\r\n//     component: Component,\r\n//     ...rest\r\n// }) => {\r\n\r\n//     return (\r\n//         <Route { ...rest }\r\n//             component={ (props) => (\r\n//                 ( isAuthenticated )\r\n//                     ? ( <Route path=\"/\" /> )\r\n//                     : ( <Component { ...props } /> )\r\n//             )}\r\n        \r\n//         />\r\n//     )\r\n// }\r\n\r\n\r\n// export default PublicRoute;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { Charging } from \"../components/auth/Charging\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\n  \r\n\r\nexport const AppRoute = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {checking} = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n      dispatch(startChecking())\r\n\r\n  }, [dispatch]);\r\n  \r\n  if (checking){\r\n    return ( <Charging /> ) \r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/login\" element={\r\n                    <PublicRoute>\r\n                        <LoginScreen />\r\n                    </PublicRoute>\r\n                } \r\n                />\r\n          \r\n          <Route path=\"/*\"  element ={\r\n                  <PrivateRoute>\r\n                       <CalendarScreen/>\r\n                  </PrivateRoute>\r\n              }\r\n          />\r\n          {/* <Route path=\"*\" element={<CalendarScreen />} />   */}\r\n\r\n        </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    checking : true,\r\n    //uid:null,\r\n    //name:null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:   \r\n            return{\r\n                ...state, //  {cheking:  true}\r\n                ...action.payload, /*es el user => {name: 'Lorenzo Vignolo', uid: '619a1c4e09e0267e8f46e5ec'}*/\r\n                checking:false,\r\n                \r\n                \r\n                //este action.payload, es el name y el uid. Para entenderlo voy a la accion\r\n                // empieza con startLogin, que dentro tiene una accion asyncrona que llama a la\r\n                //accion authLogin la cual como payload tiene al user el mismo user que me devuelve\r\n                //este reducer.\r\n\r\n            }\r\n        \r\n        case types.authChekingFinish:\r\n\r\n            return{\r\n                ...state, /* {\"ok\":true, \"uid\" : ...., \"name\": \"Lorenzo\", \"token\" : .....} */\r\n                checking:false,\r\n                }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                \r\n                checking:false,\r\n            }\r\n\r\n          \r\n            \r\n        default:\r\n            return state;\r\n         \r\n    }\r\n}","\r\nimport { types } from \"../../types/types\";\r\n\r\n// {\r\n//     id :  viene de la base de datos,(DB)\r\n//     title: \"cumpleaños\",(DB)\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,\"hours\").toDate(),\r\n//     note:\"Comprar regalo\",(DB)\r\n//     user: {\r\n//         _id: \"123\", (DB)\r\n//         name: \"Lorenzo\" (DB)\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent : null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent : action.payload\r\n                \r\n\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events : [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]  \r\n            }\r\n\r\n        case types.cleanActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.updatedEvent:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e )\r\n            }\r\n\r\n        case types.delatedEvent:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e._id !== state.activeEvent._id),\r\n                    ),\r\n                    activeEvent : null\r\n\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n            case types.eventLogout:\r\n                return{\r\n                    \r\n                   ...initialState\r\n                } \r\n\r\n           \r\n          \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen : false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState , action) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.uiOpenModal:\r\n            return{\r\n                    ...state,\r\n                    modalOpen : action.playload  \r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen : action.playload  \r\n\r\n            }\r\n            \r\n            \r\n    \r\n        default:\r\n            return state;\r\n           \r\n    }\r\n\r\n}"," import {combineReducers} from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n export const rootReducer = combineReducers({\r\n     ui: uiReducer,\r\n     calendar: calendarReducer,\r\n     auth: authReducer\r\n     \r\n }) ","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../components/reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nexport const store = createStore (\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk) //uso el thunk por que voy a tener petisions Api las cuales son asincronas.\r\n    ) \r\n    );","\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRoute } from \"./router/AppRoute\";\nimport { store } from \"./store/store\";\n\n\nfunction CalendarApp() {\n  return (\n    <>\n    <Provider store={store}>\n      <AppRoute />\n    </Provider>\n      \n    </>\n  );\n}\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles.css\";\n\n\nimport CalendarApp from './CalendarApp';\n\n\n\n\nReactDOM.render(\n  \n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}